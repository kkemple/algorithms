{
  "name": "grunt-stripcomments",
  "description": "Remove comments from production code",
  "version": "0.1.0",
  "homepage": "https://github.com/kkemple/grunt-stripcomments",
  "author": {
    "name": "Kurtis Kemple",
    "email": "kurtiskemple@gmail.com",
    "url": "http://kurtiskemple.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kkemple/grunt-stripcomments"
  },
  "bugs": {
    "url": "https://github.com/kkemple/grunt-stripcomments/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kkemple/grunt-stripcomments/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "strip",
    "comments",
    "strip comments",
    "remove",
    "remove comments"
  ],
  "readme": "# grunt-stripcomments\r\n\r\n> Remove comments from production ready code\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-stripcomments --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-stripcomments');\r\n```\r\n\r\n## The \"comments\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `comments` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  comments: {\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n      options: {\r\n          singleline: true,\r\n          multiline: true\r\n      },\r\n      src: [ 'src/*.js'] // files to remove comments from\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n### Options\r\n\r\n#### options.singleline\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nDetermines whether or not to remove single line comments\r\n\r\n#### options.multiline\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nDetermines whether or not to remove multi line comments\r\n\r\n### Usage Examples\r\n\r\n```js\r\ngrunt.initConfig({\r\n  comments: {\r\n    js: {\r\n      options: {\r\n        singleline: true,\r\n        multiline: false\r\n      },\r\n      src: [ 'src/*.js' ]\r\n    },\r\n    php: {\r\n      options: {\r\n        singleline: true,\r\n        multiline: true\r\n      },\r\n      src: [ 'lib/*.php' ]\r\n    }\r\n  },\r\n});\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\nv 0.1.0 - alpha release\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-stripcomments@0.1.0",
  "dist": {
    "shasum": "de95a05797f0fab9b8d575a5a9db841054e5b41b"
  },
  "_from": "grunt-stripcomments@",
  "_resolved": "https://registry.npmjs.org/grunt-stripcomments/-/grunt-stripcomments-0.1.0.tgz"
}
